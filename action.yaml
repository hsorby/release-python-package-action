name: 'Create release of Python package'

description: 'Create a release and upload built python package to PyPI.'

inputs:
  pypi-package-name:
    description: 'Specify the name of the python package on PyPI.org.'
    required: true
    default: 'not-a-name'
  release-heading:
    description: 'Specify the heading for the release.'
    required: false
    default: '${{ github.ref }}'

runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      shell: bash
      run: echo "$GITHUB_CONTEXT"
    - name: Create Release
      id: create_release
      uses: KaiWedekind/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ github.event.token }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ inputs.release-heading }}
    - name: "Generate release changelog"
      uses: heinrichreimer/action-github-changelog-generator@v2.3
      with:
        token: ${{ github.event.token }}
    - name: Add changelog to release
      uses: irongut/EditRelease@v1.2.0
      with:
        token: ${{ github.event.token }}
        id: ${{ steps.create_release.outputs.id }}
        files: "CHANGELOG.md"
    - name: Send event
      uses: peter-evans/repository-dispatch@v3
      with:
        event-type: release-created
        client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}", "release_id": "${{ steps.create_release.outputs.id }}", "pypi_package_name": "${{ inputs.pypi-package-name }}"}'
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.x
    - name: Install dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel build
    - name: Build
      id: build
      shell: bash
      run: |
        python --version
        python -m build . --wheel
        echo "dist content:"
        ls dist/
    - name: Publish package distributions to PyPI
      env:
        name: pypi
        url: https://pypi.org/p/${{ inputs.pypi-package-name }}
      uses: pypa/gh-action-pypi-publish@release/v1
